//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BoardBall boardBall { get { return (BoardBall)GetComponent(GameComponentsLookup.BoardBall); } }
    public bool hasBoardBall { get { return HasComponent(GameComponentsLookup.BoardBall); } }

    public void AddBoardBall(UnityEngine.Vector2 newBoardIdx, int newValue, bool newShifted) {
        var index = GameComponentsLookup.BoardBall;
        var component = (BoardBall)CreateComponent(index, typeof(BoardBall));
        component.boardIdx = newBoardIdx;
        component.value = newValue;
        component.shifted = newShifted;
        AddComponent(index, component);
    }

    public void ReplaceBoardBall(UnityEngine.Vector2 newBoardIdx, int newValue, bool newShifted) {
        var index = GameComponentsLookup.BoardBall;
        var component = (BoardBall)CreateComponent(index, typeof(BoardBall));
        component.boardIdx = newBoardIdx;
        component.value = newValue;
        component.shifted = newShifted;
        ReplaceComponent(index, component);
    }

    public void RemoveBoardBall() {
        RemoveComponent(GameComponentsLookup.BoardBall);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBoardBall;

    public static Entitas.IMatcher<GameEntity> BoardBall {
        get {
            if (_matcherBoardBall == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BoardBall);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBoardBall = matcher;
            }

            return _matcherBoardBall;
        }
    }
}
